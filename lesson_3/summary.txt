# 关于作业的总结

## lesson_1
### The issues in the assignment
1.Cv2 是opencv中的包
	在anaconda 安装opencv时，要使用anaconda prompt 利用命令：
	Conda install -c http://conda.binstar.org/menpo opencv

2.关于cmd中无法调用python，解决方法有二：
	1. way_1
		(1). 在path中添加python的路径。（如果无法解决，侧使用2）
		(2).  在cmd中输入：“set PATH=%PATH%；”C：\python
		(3). 用管理员身份运行cmd

	2. way_2: Cv coding
		(1). Cv2.waitKey
		(2). Cv2.merge(()), #合并R，G，B时，需两层括号

3.Gamma corrention
	Table = np.array(table).astype('uint8'); not "unit8"


## lesson_2

### 不同方法的运行时间
1. low_lever：    （1）单通道：1.39    （2）三通道： 4.07
2. high_lever_1： （1）单通道：0.7256  （2) 三通道： 1.735
3. high_lever_2： （1）单通道：4.9

### 问题分析
1. low_lever的方法是自己以前学过C语言里面用过的，没啥好说的
2. high_lever_1的方法是网上找到的的算法叫huang算法，具体没有时间没有研究
3. high_lever_2的方法是在找1方法的时候看到的排序方法，本以为方法2会最快，没想到方法2速度
   慢的最离谱，取值那一块应该是更快，估计是取中间值拖了后腿，具体是因为方法比sort（）方法
   慢，还是因为python本身运行的效率问题。
4*. 作业中处理后的图片显示出来是黑色的，原因是在创建二维数组的时候数据类型错误，show方法只
	能读出nint8的数据。处理之后，发现方法1的问题玩美解决，方法2的问题依然存在，复查也没发
	现问题，之后找时间解决
5. 低时间复杂度方法1的图片能显示出来之后，发现图片发生位移，原因是采取了蛇形取中间值的方法，
	导致奇偶数行的像素排列相反，通过提前建立数组，然后记录像素位置纠正，该问题最终解决。

## lesson_3

### 学习心得
1. 因为数学基础比较弱，所以上课听的比较迷糊。 在课后反复听录播的时候才逐渐将尘封在记忆中的
    知识逐渐想起来，老师讲的内容也有点感觉了，但是，还是比较迷。最后，跟着老师把代码打了一
    遍，然后又分析代码，又明白一点了，仿佛抓住了课程的关键点。
2. 同过反复的看视频，对于本课的理解进一步加深。但是代码方面还有很大的困难，特别是老师演示的
    分类的代码。因为对所用到的两个库不是很熟悉，所以在这个方面花了很大的力气。部分代码有点理
    解了，但是任然有一些内容无法理解，还需要进一步学习文档。
3. 关于附加作业，尝试去做了，主要的问题和2中遇到的一样。目前决定这个问题先留下，等后期在做解
    决。

### 问题
1. 线性回归和分类问题的cost function是不一样的，这个问题最开始没有意识到（也就是课没听懂）。
2. 对于分类问题老师代码的研究笔记已经写在相应的代码旁边。

